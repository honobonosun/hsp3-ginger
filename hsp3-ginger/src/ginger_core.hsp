// メイン処理

#include "ginger_constants.hsp"
#include "ginger_args.hsp"
#include "ginger_sub_compile.hsp"
#include "ginger_sub_help.hsp"
#include "ginger_sub_make.hsp"
#include "ginger_sub_run.hsp"
#include "mod_cmdline_parser.hsp"
#include "mod_unicode_cnv.hsp"

#module m_ginger_core

#include "hspcmp.as"

#define true 1
#define false 0

#deffunc ginger_core_main

	sdim s_error

	ginger_core_do_main
	if stat == false {
		ginger_infra_error s_error
		end EXIT_FAILURE
	}

	assert s_error == ""
	end

#deffunc ginger_core_do_main

	sdim s_forward_args
	s_forward_argc = 0

	ginger_args_parse s_forward_args, s_forward_argc

	ginger_core_do_subcommand
	if stat == false {
		return false
	}
	return true

// -----------------------------------------------
// サブコマンドの実行
// -----------------------------------------------

#deffunc ginger_core_do_subcommand \
	local subcommand, local show_help

	ginger_args_get_subcommand subcommand
	if stat == false {
		subcommand = "help"
	}

	ginger_args_show_help
	show_help = stat

	if subcommand == "help" {
		ginger_sub_help_main s_forward_args, s_forward_argc, show_help, s_error
		return stat
	}

	if subcommand == "version" {
		ginger_infra_get_version s_version
		ginger_infra_stdout s_version
		return stat
	}

	if subcommand = "run" {
		ginger_sub_run_main s_forward_args, s_forward_argc, show_help, s_error
		return stat
	}

	if subcommand = "make" {
		ginger_sub_make_main s_forward_args, s_forward_argc, show_help, s_error
		return stat
	}

	if subcommand = "compile" {
		ginger_sub_compile_main s_forward_args, s_forward_argc, show_help, s_error
		return stat
	}

	s_error = "不明なサブコマンド: " + subcommand
	return false

// -----------------------------------------------
// コンパイル機能
// -----------------------------------------------

#deffunc ginger_core_get_hsp_dir var hsp_dir

	ginger_args_get_hsp_dir hsp_dir
	if stat {
		return true
	}

	exist dir_exe + "/hsp3.exe"
	if strsize > 0 {
		hsp_dir = dir_exe
		return true
	}

	// FIXME: 環境変数 HSP3_ROOT から取得する。
	return false

#deffunc ginger_core_get_common_dir var common_dir

	ginger_core_get_hsp_dir common_dir
	if stat == false {
		return false
	}

	common_dir += "\\common\\"
	return true

#deffunc ginger_core_get_obj_name var obj_name

	ginger_args_get_obj_name obj_name
	if stat == false {
		obj_name = "start.ax"
	}
	return

#deffunc ginger_core_get_compile_opts \
	local compile_opts

	ginger_core_is_debug_mode
	if stat {
		// デバッグ情報の埋め込み
		compile_opts = 1
	}

	// UTF-8 入力
	compile_opts |= 4

	return compile_opts

#deffunc ginger_core_get_pp_opts

	// 4: packfile 生成 (実行ファイルの生成に必要)
	// 32: UTF-8 出力モード
	return 4 | 32

#deffunc ginger_core_is_debug_mode

	ginger_args_is_release_mode
	return stat == false

// HSP3 コンパイラが出力したメッセージを取得する
//
// %prm
// message
//
// var message: メッセージの内容が格納される文字列型変数
//
// %inst
// コンパイラからメッセージを取得する。
//
// コンパイラのメッセージは shift_jis エンコーディングになっているが、
// ソースコードから抜粋された部分だけ UTF-8 になる。
//
// ここでは、ソースコードからの抜粋と思われる部分以外を UTF-8 に変換して、
// 全体を UTF-8 にする。
#deffunc ginger_core_getmes var message, \
	local message_size, local lines, local line_count, local utf8_line, \
	local os_line, local os_line_len, local utf8_line_len

	// メッセージを取得する。
	hsc3_messize message_size

	message = ""
	memexpand message, message_size + 1

	hsc_getmes message

	// メッセージを行ごとに分割する。
	split message, "\n", lines
	line_count = stat

	// 各行を UTF-8 に変換する。
	message = ""

	repeat line_count
		if instr(lines(cnt), , "-->") >= 0 {
			// この行はソースコードの抜粋なので変換しない。
			utf8_line = lines(cnt)
		} else {
			utf8_line = ""
			unicode_cnv_from_sjis lines(cnt), strlen(lines(cnt)), os_line, os_line_len
			unicode_cnv_to_utf8 os_line, os_line_len, utf8_line, utf8_line_len
		}

		// OK: コンパイルメッセージは短いので += の遅さは問題ない
		message += utf8_line + "\n"
	loop

	return

#deffunc ginger_core_compile var src_path, \
	local hsp_dir, local common_dir, local ref_name, local obj_name, \
	local compile_opts, local pp_opts, local is_debug_mode

	hsc_ini src_path
	if stat {
		return false
	}

	gigner_args_get_ref_name ref_name
	if stat {
		hsc_refname ref_name
		if stat {
			return false
		}
	}

	ginger_core_get_obj_name obj_name
	hsc_objname obj_name
	if stat {
		return false
	}

	ginger_core_get_common_dir common_dir
	hsc_compath common_dir
	if stat {
		return false
	}

	ginger_core_get_compile_opts
	compile_opts = stat

	ginger_core_get_pp_opts
	pp_opts = stat

	ginger_core_is_debug_mode
	is_debug_mode = stat

	hsc_comp compile_opts, pp_opts, is_debug_mode
	return stat == 0

#deffunc ginger_core_get_runtime_name var runtime_name, \
	local obj_name

	ginger_core_get_obj_name obj_name

	runtime_name = ""
	hsc3_getruntime runtime_name, obj_name
	if runtime_name == "" {
		runtime_name = "hsp3.exe"
	}
	return

#global
