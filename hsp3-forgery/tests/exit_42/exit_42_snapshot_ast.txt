ANodeData {
    node: Root(
        ARootNode {
            errors: [],
        },
    ),
    children: [
        ANodeData {
            node: Module(
                AModuleNode {
                    module_stmt: AModuleStmt {
                        hash: Hash("#"),
                        keyword: Ident("module"),
                        name_opt: None,
                        sep_opt: Some(
                            Eol("\n\n"),
                        ),
                    },
                    global_stmt_opt: Some(
                        AGlobalStmt {
                            hash: Hash("#"),
                            keyword: Ident("global"),
                            sep_opt: Some(
                                Eol("\n"),
                            ),
                        },
                    ),
                },
            ),
            children: [
                ANodeData {
                    node: Fn(
                        AFnNode {
                            deffunc_stmt: ADeffuncStmt {
                                hash: Hash("#"),
                                keyword: Ident("deffunc"),
                                name_opt: Some(
                                    Ident("main"),
                                ),
                                sep_opt: Some(
                                    Eol("\n\t"),
                                ),
                            },
                        },
                    ),
                    children: [
                        ANodeData {
                            node: Stmt(
                                Command(
                                    ACommandStmt {
                                        command: Return("return"),
                                        jump_keyword_opt: None,
                                        args: [
                                            AArg {
                                                expr_opt: Some(
                                                    Int(
                                                        AIntExpr {
                                                            token: Digit("42"),
                                                        },
                                                    ),
                                                ),
                                                comma_opt: None,
                                            },
                                        ],
                                        sep_opt: Some(
                                            Eol("\n\n"),
                                        ),
                                    },
                                ),
                            ),
                            children: [],
                        },
                    ],
                },
            ],
        },
    ],
}
